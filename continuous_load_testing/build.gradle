/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java'
    id 'distribution'
    id 'application'
    id "com.google.protobuf" version "0.9.4"
}

def grpcVersion = '1.68.1'
def protocVersion = '3.25.3'
def openTelemetryVersion = '1.45.0'
def openTelemetryContribVersion = '1.42.0'
def cloudMonitoringExporterVersion = '0.33.0'

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceSets {
    main {
        proto {
            srcDir '../third_party/grpc-proto'
            exclude 'grpc/binlog'
            exclude 'grpc/channelz'
            exclude 'grpc/core'
            exclude 'grpc/examples'
            exclude 'grpc/gcp'
            exclude 'grpc/health'
            exclude 'grpc/lb'
            exclude 'grpc/lookup'
            exclude 'grpc/reflection'
            exclude 'grpc/service_config'
            exclude 'grpc/testing/benchmark_service.proto'
            exclude 'grpc/testing/control.proto'
            exclude 'grpc/testing/report_qps_scenario_service.proto'
            exclude 'grpc/testing/stats.proto'
            exclude 'grpc/testing/worker_service.proto'
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.google.net.grpc.testing.directpath.continuous_load_testing.Client'
}

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-xds:${grpcVersion}"
    implementation "io.grpc:grpc-rls:${grpcVersion}"
    implementation "io.grpc:grpc-googleapis:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java:${protocVersion}"
    implementation "io.grpc:grpc-opentelemetry:${grpcVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-metrics:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:${openTelemetryVersion}"
    implementation "com.google.cloud.opentelemetry:exporter-metrics:${cloudMonitoringExporterVersion}"
    implementation "io.opentelemetry.contrib:opentelemetry-gcp-resources:${openTelemetryContribVersion}-alpha"
    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation 'javax.annotation:javax.annotation-api:1.3.1'
    }
}
