plugins {
    id 'java'
    id 'com.google.protobuf' version '0.8.8'
    id 'maven'
}

group 'io.grpc'
version '2.3-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def grpcVersion = '1.49.0'
def protobufVersion = '3.9.0'
def protocVersion = protobufVersion
def opencensusVersion = '0.31.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-testing:${grpcVersion}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-census:${grpcVersion}"
    implementation "io.grpc:grpc-googleapis:${grpcVersion}"
    implementation "net.sourceforge.argparse4j:argparse4j:0.9.0"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    implementation "org.hdrhistogram:HdrHistogram:2.1.12"
    implementation "io.opencensus:opencensus-api:${opencensusVersion}"
    implementation "io.opencensus:opencensus-impl:${opencensusVersion}"
    implementation "io.opencensus:opencensus-exporter-stats-stackdriver:${opencensusVersion}"
    implementation "io.opencensus:opencensus-exporter-trace-stackdriver:${opencensusVersion}"
    implementation 'io.opencensus:opencensus-contrib-grpc-metrics:${opencensus.version}'
    implementation "com.google.http-client:google-http-client-jackson2:1.41.7"

    implementation "org.apache.commons:commons-math3:3.6.1"

    //implementation "com.google.guava:guava:28.1-jre"

    compileOnly "org.apache.tomcat:annotations-api:6.0.53"



    testCompile group: 'junit', name: 'junit', version: '4.12'
}


protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

jar {
    manifest {
        attributes (
                'Main-Class': 'io.grpc.echo.TestMain'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        //configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'io.grpc.echo.TestMain'
    //jvmArgs = ['-Djava.util.logging.config.file=./logging.properties']
    //jvmArgs = ['-Xlint:deprecation']
}

task writePom {
    doLast {
        pom {
            project {
                inceptionYear '2019'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'manual'
                    }
                }
            }
        }.writeTo("pom.xml")
    }
}
