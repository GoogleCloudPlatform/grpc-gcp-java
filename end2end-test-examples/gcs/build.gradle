plugins {
    id 'java'
    id 'com.google.protobuf' version '0.8.8'
    id 'maven'
}

group 'io.grpc'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

def gcsioVersion = '2.2.7'
def grpcVersion = '1.49.0'
def protobufVersion = '3.21.5'
def protocVersion = protobufVersion
def conscryptVersion = '2.5.2'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile "io.grpc:grpc-alts:${grpcVersion}"
    compile "io.grpc:grpc-api:${grpcVersion}"
    compile "io.grpc:grpc-auth:${grpcVersion}"
    compile "io.grpc:grpc-census:${grpcVersion}"
    compile "io.grpc:grpc-context:${grpcVersion}"
    compile "io.grpc:grpc-googleapis:${grpcVersion}"
    compile "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "io.grpc:grpc-testing:${grpcVersion}"
    compile "io.grpc:grpc-xds:${grpcVersion}"
    compile "org.conscrypt:conscrypt-openjdk-uber:${conscryptVersion}"
    compile "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    compile "com.google.api.grpc:grpc-google-cloud-storage-v2:latest.release"
    compile "com.google.api.grpc:proto-google-iam-v1:latest.release"
    compile "com.google.api.grpc:proto-google-common-protos:latest.release"
    compile "com.google.auth:google-auth-library-oauth2-http:latest.release"
    compile "com.google.cloud:google-cloud-storage:latest.release"
    compile "com.google.cloud.bigdataoss:gcsio:${gcsioVersion}"
    compile "com.google.cloud.bigdataoss:bigdataoss-parent:${gcsioVersion}"
    compile "com.google.guava:guava:31.1-jre"
    compile "net.sourceforge.argparse4j:argparse4j:0.9.0"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'io.grpc.gcs.TestMain'
    //jvmArgs = ['-Djava.util.logging.config.file=./logging.properties']
    //jvmArgs = ['-Xlint:deprecation']
    //jvmArgs = ['-Djava.security.debug=provider']
}

task fatJar(type: Jar) {
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                   'Implementation-Version': version,
                   'Main-Class': 'io.grpc.gcs.TestMain'
    }
    baseName = project.name + '-all'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

task copyJarsToLib (type: Copy) {
    def toDir = "build/libs/dependency-jars"

    // create directories, if not already done:
    file(toDir).mkdirs()

    // copy jars to lib folder:
    from configurations.compile
    into toDir
}

jar {
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    manifest {
        attributes (
            'Main-Class': 'io.grpc.gcs.TestMain',
            'Class-Path': '. dependency-jars/' + configurations.compile.collect { it.getName() }.join(' dependency-jars/')
        )
    }
}

jar.dependsOn copyJarsToLib

